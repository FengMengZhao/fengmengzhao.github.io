---
layout: post
title: 详解主动型(Active Mode)FTP和被动型(Passive Mode)FTP
subtitle: ftp的传统的连接模式是主动模式，为什么有了被动模式？主动模式和被动模式分别是怎么工作的？
background: '/img/posts/active-passive-ftp.png'
comment: true
---

## 目录

- [1. 简介](#1)
- [2. 基本概念](#2)
- [3. Active Mode FTP](#3)
- [4. Passive Mode FTP](#4)
- [5. 总结](#5)

<h3 id="1">1. 简介</h3>

当第一次接触FTP的时候，肯定会为FTP的不同连接Mode而苦恼，`Active Mode`和`Passive Mode`到底有什么样的不同？具体到网络中的防火墙又要怎么配置才能保证网络安全的同时获取正确的FTP访问？本篇文章给出了详细的解释。

---

<h3 id="2">2. 基本概念</h3>

FTP服务仅仅基于TCP协议，实现不包括UDP协议部分。FTP工作时同时使用了两个端口：`数据(data)`端口和`命令(command)`端口(又称为control port)。传统的FTP实现(Active Mode)用`20`作为数据端口，`21`作为命令端口；而被动模式(Passive Mode)会随机启用本机的一个端口作为数据监听端口。当使用不同的Mode(Active或者Passive)连接FTP时，数据端口总是会发生改变，这就是令人迷惑的地方。

---

<h3 id="3">3. Active Mode FTP</h3>

主动模式(Active Mode FTP)连接FTP时，客户端会在本地启用一个非预留端口`N`(N > 1023)，客户端从这个端口连接FTP Server端口`21`并发送FTP command `PORT N+1`到FTP Server，同时客户端会监听端口`N+1`。FTP Server将通过本地的`20`端口连接回客户端指定的监听端口`N+1`。

从服务端防火墙的角度，为了支持主动模式的FTP访问，如下策略是必须是打开的：

- 客户端任意大于1023端口到FTP Server的21端口(客户端初始化连接)
- FTP Server的21端口到客户端任意大于1023端口(服务回应客户端的命令端口)
- FTP Server的20端口到客户端任意大于1023端口(服务初始化数据连接(和发送数据)到客户端的数据端口)
- 客户端任意大于1023端口到FTP Server 20端口(客户端发送ACK到服务数据端口)

> 这里的`N`和`N+1`端口是示意端口，实际上并不一定满足`+1`的关系。

主动模式的网络图：

![activeftp](/img/posts/activeftp.png)

> 第一步：客户端的命令端口连接服务端的命令端口，并且发送命令`Port 1027`。<br><br>
第二步：服务发回ACK到客户端命令端口。<br><br>
第三步：服务端数据端口(默认为20端口)初始化数据连接到客户端数据端口(监听端口，端口号第一步中已经通过命令端口发送给服务端)。<br><br>
第四步：客户端数据端口发回ACK到服务端数据端口。

主动模式存在的问题：假设公网的网段为`210.33.55.xxx`，局域网共享了`210.33.55.2`这个IP，公网中有公共的ftp，当局域网中`192.168.200.2`用户访问公共ftp下载时，如果连接方式为主动模式就会出现问题。因为公网中的ftp需要向`210.33.55.2`这个路由的`192.168.200.2`中开启的数据端口发送数据，很显然路由`210.33.55.2`IP中找不到该数据端口。

> 那可能有的同学会有这样的疑问：我在家中用局域网(192.168.1.101)也能访问互联网啊，那说明公网IP的数据至少是能到达我的局域网IP(192.168.1.101)端口的，为什么这里就说公网IP找不到局域网中的数据端口？实际上，这里的关键是**谁**来初始化，我们在内网中访问互联网是**本地(局域网)的客户端**主动初始化互联网中某IP端口连接，一旦建立连接就可以进行双向通信。但是**互联网**不能主动初始化连接到局域网中某个监听端口，这也就是为什么主动模式访问部署在公网IP中的ftp不能连接成功，因为这种模式需要公网主动初始化连接到局域网数据监听端口。就像某个企业HR用内部电话打电话说让你去面试，电话通之后你们就能通讯了(局域网能访问互联网)。但是，电话挂断之后你再打过去就是前台了，找不到之前给你打电话的人(互联网服务主动初始化连接到局域网)。这里你的电话就是公网，企业的内部电话就是局域网，企业内部电话能主动联系到你，而你不能主动联系到企业内部的某个座机(当然了找前台报分机号，前台会帮你找，但是对于局域网-互联网模型，公网IP是无法初始化连接到内网的)。

---

<h3 id="4">4. Passive Mode FTP</h3>

为了解决服务端要向客户端初始化数据连接的问题，被动模式应运而生。客户端可以通过`PASSIVE ON`告诉服务端使用的连接方式是被动模式。

在被动模式中，命令端口和数据端口的初始化连接都是由客户端主动发起的，这样就解决了客户端防火墙可能过滤掉服务端数据端口发来的连接。当打开FTP连接时，客户端在本地启用了两个端口(N>1023和N+1)。第一个端口连向服务端命令端口`21`，然后向服务端发出`Pasv`命令而不是像主动模式那样发送`PORT N+1`，这个`PSAV`命令可以让服务端随机开启一个非预留端口(P>1023)并且将这个端口号返回给客户端回应`PASV`命令。客户端就可以从端口`N+1`向端口`P`进行初始化连接来传输数据。

从服务端防火墙的角度，为了支持主动模式的FTP访问，如下策略是必须是打开的：

- 客户单任意大于1023端口到FTP Server的21端口(客户端初始化连接)
- FTP Server的21端口到客户端任意大于1023端口(服务回应客户端的命令端口)
- 客户端任意大于1023端口到FTP Server的任意大于1023端口(客户端初始化数据连接到服务端的数据端口)
- FTP Server的任意大于1023端口到客户端任意大于1023端口(服务端发送ACK(和数据)到服务数据端口)

被动模式的网络图：

![passiveftp](/img/posts/passiveftp.png)

> 第一步：客户端连接服务端`21`并且发出`PASV`命令。<br><br>
第二步：服务端开启2024端口并监听来自客户端的数据连接，同时回应第一步`PORT 2024`。<br><br>
第三步：客户端从本地数据端口初始化数据连接到服务端指定数据端口2024。<br><br>
第四部：服务端回应客户端`ACK`(和数据)。

虽然被动模式解决了很多服务端的问题，但是服务端也产生了一些问题。最大的问题就是要求客户端能够连接到服务端任意大于1023的端口，不过幸运的是服务端的任意数据端口可以设定在一个范围内。

**ftp服务配置`PASV`被动模式：**

    pasv_enable=YES #passive模式开启
    pasv_min_port=3000 #被动模式最小端口号(P>1023)
    pasv_max_port=4000 #被动模式最大端口号(P>1023)
    pasv_address=xxx.xxx.xxx.xxx #指定ftp服务的数据服务在一个远程机器
    #port_enable=YES #active模式开启
    #connect_from_port_20=YES #默认Active Mode情况下server端数据传输通过20端口

> 注意：<br><br>
- 如果被动模式端口范围最大最小设置为一个固定的值，这个固定端口处于监听状态时，新的客户端不能用被动模式连接到ftp服务，原因还没有弄清楚。如果把端口设置为一个区间，就不会出现此问题。
- 当使用web浏览器或者Windows网络共享作为客户端访问FTP时，经常会输入`ftp://ip:port`，大部分浏览器只支持被动模式。<br><br>

---

<h3 id="5">5. 总结</h3>

主动与被动ftp工作连接方式：

    Active FTP:
        command: client >N   --> server 21
        data   : client >N+1 <-- server 20 
    Passive FTP:
        command: client >N   --> server 21
        data   : client >N+1 --> server P(P>1023)

> 通俗的语言将主动模式与被动模式的区别：<br><br>
主动模式：客户端对服务端说，我给你发一个端口，这个端口在我本地监听，我需要数据的时候会通过命令端口发送命令，然后你把数据**主动推送**到我这里！<br><br>
被动模式：客户端对服务端说，我给你发一个`PASV`命令，这样我就约定好了用被动模式连接了，你启动一个监听端口吧，我需要数据的时候会去你那里取的，你需要**被动传**数据到我这里！

---

**Reference**

- [http://slacksite.com/other/ftp.html](http://slacksite.com/other/ftp.html)
